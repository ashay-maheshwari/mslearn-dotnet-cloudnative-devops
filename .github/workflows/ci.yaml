name: Build, Publish Docker images of GoShop Application and update Manifest files 

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

env:
  # Local environment variables used later in the workflow
  IMAGE_NAME1: 'products'
  IMAGE_NAME2: 'store'
  IMAGE_TAG: ${{ github.sha }}


jobs:
  build-and-publish:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Set up .NET 8.0.401
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '8.0.401'  # Specify the .NET version you need

    - name: Restore dependencies
      run: dotnet restore

    - name: Build project
      run: dotnet build --no-restore
      
    - name: Run Unit tests
      run: dotnet test --no-build --verbosity normal

    - name: Publish using DefaultContainer profile
      run: dotnet publish /p:PublishProfile=DefaultContainer
      
    - name: Tag Docker image
      run: |
        docker tag products:latest ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME1 }}:${{ env.IMAGE_TAG }} 
        docker tag store:latest ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME2 }}:${{ env.IMAGE_TAG }}  
        
    - name: Log in to Azure Container Registry - ProductionClusterregistry
      uses: docker/login-action@v2
      with:
        registry: ${{ secrets.REGISTRY_URL }}
        username: ${{ secrets.ACR_USERNAME }}
        password: ${{ secrets.ACR_PASSWORD }}
        
    - name: Install Trivy
      run: |
        sudo apt-get update
        sudo apt-get install -y wget
        wget https://github.com/aquasecurity/trivy/releases/download/v0.42.0/trivy_0.42.0_Linux-64bit.deb
        sudo dpkg -i trivy_0.42.0_Linux-64bit.deb

    - name: Scan Docker image with Trivy - Products 
      run: |
        trivy image --ignore-unfixed --exit-code 0 --no-progress ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME1 }}:${{ env.IMAGE_TAG }}

    - name: Scan Docker image with Trivy - Store 
      run: |
        trivy image --ignore-unfixed --exit-code 0 --no-progress ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME2 }}:${{ env.IMAGE_TAG }}
 
    - name: Push Docker image - Product image and Store image
      run: |
       docker push ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME1 }}:${{ env.IMAGE_TAG }}
       docker push ${{ secrets.REGISTRY_URL }}/${{ env.IMAGE_NAME2 }}:${{ env.IMAGE_TAG }}

    - name: Checkout manifest repository
      uses: actions/checkout@v3
      with:
        repository: ashay-maheshwari/mslearn-argocd-demo
        token: ${{ secrets.ARGO_REPO_TOKEN }}  # Token to access the manifest repo

    - name: Update manifest file
      run: |
        sed -i 's|image: productionclusterregistry.azurecr.io/products:.*|image: productionclusterregistry.azurecr.io/products:${{ github.sha }}|' deployment-products.yaml
        sed -i 's|image: productionclusterregistry.azurecr.io/store:.*|image: productionclusterregistry.azurecr.io/store:${{ github.sha }}|' deployment-store.yaml
        git config user.name "ashay-maheshwari"
        git config user.email "aaryaashay1848@gmail.com"
        git add deployment-store.yaml
        git add deployment-products.yaml
        git commit -m "Update image tags to ${{ github.sha }}"
        git push

    - name: Send MS Teams notification on build status
      id: notification
      if: always()
      uses: sergioaten/msteams-notifications@v0.1-beta
      with:
       webhook: ${{ secrets.MSTEAMS_WEBHOOK_URL }}
       steps: ${{ toJson(steps) }}
       factsTitle: "Build Status for Eshoplite"
       facts: |
          - Application: EshopLite 
          - Version: 1.0.0
       buttons: |
          - type: OpenUri
            name: View in GitHub
            targets:
              - os: default
                uri: https://github.com/ashay-maheshwari/mslearn-dotnet-cloudnative-devops/
